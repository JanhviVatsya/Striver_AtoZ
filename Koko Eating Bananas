long long totaltimetaken(vector<int>&piles, int mid){
    long long time=0;
    for(auto it: piles){
        time=time+(it/mid)+((it%mid)!=0); // point to revise
    }
    return time;
}

    int minEatingSpeed(vector<int>& piles, int h) {
        int low= 1;
        int high= *max_element(piles.begin(), piles.end());
        int ans=0;
        while(low<=high){
            int mid= low+(long long)(high-low)/2;
            long long timetaken= totaltimetaken(piles, mid);
            if(timetaken==h){
                ans=mid;
                high=mid-1;
            }
            else if(timetaken<h){
                ans= mid;
                high=mid-1;
            }
            else if(timetaken>h){
                low=mid+1;
            }
        }
        return ans;
